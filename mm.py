#!/usr/bin/pythonimport osimport sysimport redef parser(data):    print "data 0 =", data    year_regex_0 = re.compile("\(\d{4}\)(.*)$")    year_regex_1 = re.compile("\[\d{4}\](.*)$")    print "year_regex_1.search(data).group(0) =", year_regex_1.search(data).group(0)    print "year_regex_1.search(data).group(1) =", year_regex_1.search(data).group(1)    data = re.sub(year_regex_1.search(data).group(1), '', data)    print "data 00 =", data    year_regex_2 = re.compile("\[\d{4}\]")    data = re.sub(year_regex_0.search(data).group(1), '', data)    print "data 1 =", data    find_0 = re.findall(year_regex_2, data)    print "find_0 =", find_0    print "type(find_0) =", type(find_0)    if len(find_0) > 0:        for i in find_0:            print "i =", i            a = re.sub('\[', '(', i)            a = re.sub('\]', ')', a)            print "a =", a            data = str(data).replace(i, a)    print "data 2 =", data    find_1 = re.findall("\[.*?\]", data)    if len(find_1) > 0:        for i in find_1:            print "i 1 =", i            data = str(data).replace(i, '')    data = re.sub("\.", " ", data)    #pattern = [        ##['\d{4}', '0000'],        #["\.", " "],        #["\[|\]", ''],        #[year_regex.search(data).group(1), '']    #]    #for i in pattern:        #data = re.sub(i[0], i[1], data)    return dataif __name__ == '__main__':    data = 'hadi bandung 1980.2013 [8989] (9999) blackid [Dasd erer]'    print parser(data)